/*
 * Our flexbox grid is loosely based on the Bulma CSS grid and
 * Flexbox Grid.
 *
 * Documentation: http://bulma.io/documentation/grid/columns/
 * Documentation: http://flexboxgrid.com/
 */

// --------------------------------------------------
// mixins
// --------------------------------------------------

@mixin grid__col() {
  $breakpoints: (
    'xs': $breakpoint-xs,
    'sm': $breakpoint-sm,
    'md': $breakpoint-md,
    'lg': $breakpoint-lg,
    'xl': $breakpoint-xl
  );

  @each $key, $value in $breakpoints {
    @media screen and (min-width: #{$value}) {
      .grid__col-#{$key} {
        flex-basis: auto;
        flex-grow: 1;
        flex-shrink: 0;
      }

      @for $i from 1 through $grid-column-count {
        .grid__col-#{$key}-#{$i} {
          flex-basis: percentage(($i / $grid-column-count));
          max-width: percentage(($i / $grid-column-count));
        }

        .grid__col-#{$key}-offset-#{12 - $i} {
          margin-left: 100 - percentage(($i / $grid-column-count));
        }
      }
    }
  }
}

// --------------------------------------------------
// grid
// --------------------------------------------------

.grid {
  align-items: stretch;
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  margin-left: -$grid-gutter-width / 2;
  margin-right: -$grid-gutter-width / 2;
}

.grid--gutter,
.grid--gutter-vertical {
  margin-bottom: $grid-gutter-width / 2;
  margin-top: -$grid-gutter-width / 2;

  &:last-child {
    margin-bottom: -$grid-gutter-width / 2;
  }
}

.grid--no-gutter {
  &,
  .grid {
    margin-left: 0;
    margin-right: 0;
  }

  &:last-child,
  .grid:last-child {
    margin-bottom: 0;
  }
}

.grid--no-gutter,
.grid--no-gutter-horizontal {
  &,
  .grid {
    margin-left: 0;
    margin-right: 0;
  }
}

.grid--no-gutter,
.grid--no-gutter-vertical {
  &,
  .grid {
    margin-bottom: 0;
    margin-top: 0;
  }

  &:last-child,
  .grid:last-child {
    margin-bottom: 0;
  }
}

.grid--left {
  justify-content: flex-start;
}

.grid--center {
  justify-content: center;
}

.grid--right {
  justify-content: flex-end;
}

.grid--between {
  justify-content: space-between;
}

.grid--around {
  justify-content: space-around;
}

.grid--top {
  align-items: flex-start;
}

.grid--middle {
  align-items: center;
}

.grid--bottom {
  align-items: flex-end;
}

.grid--row-top {
  align-content: flex-start;
}

.grid--row-middle {
  align-content: center;
}

.grid--row-bottom {
  align-content: flex-end;
}

.grid--row-stretch {
  align-content: stretch;
}

.grid--row-between {
  align-content: space-between;
}

.grid--row-around {
  align-content: space-around;
}

// --------------------------------------------------
// grid__col
// --------------------------------------------------

.grid__col,
[class*='grid__col-'] {
  box-sizing: border-box;
  max-width: 100%;

  .grid--gutter &,
  .grid--gutter-vertical & {
    padding-bottom: $grid-gutter-width / 2;
    padding-top: $grid-gutter-width / 2;
  }

  &,
  .grid--gutter &,
  .grid--gutter-horizontal & {
    padding-left: $grid-gutter-width / 2;
    padding-right: $grid-gutter-width / 2;
  }

  .grid--no-gutter &,
  .grid--no-gutter-horizontal & {
    padding-left: 0;
    padding-right: 0;
  }

  &,
  .grid--no-gutter &,
  .grid--no-gutter-vertical & {
    padding-bottom: 0;
    padding-top: 0;
  }
}

.grid__col {
  flex: 1 0 auto;
}

[class*='grid__col-'] {
  flex: 0 0 auto;
}

@include grid__col();
