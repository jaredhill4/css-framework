// --------------------------------------------------
// variables
// --------------------------------------------------

$theme-border-sizes: (0);
$theme-margin-sizes: (0, 5, 10, 15, 20, 30);
$theme-padding-sizes: (0, 5, 10, 15, 20, 30);
$theme-width-sizes: (25, 33, 50, 66, 75, 100);
$theme-display: (
  none,
  inline,
  block,
  inline-block,
  table,
  table-row,
  table-cell,
  flex,
  inline-flex
);
$theme-text-align: (left, right, center, justify);
$theme-font-weights: (normal: $font-weight-normal, bold: $font-weight-bold);
$theme-font-style: (normal, italic, oblique);
$theme-vertical-align: (
  baseline,
  sub,
  super,
  top,
  text-top,
  middle,
  bottom,
  text-bottom
);
$theme-text-transform: (uppercase, lowercase, capitalize);
$theme-float: (left, right, none);
$theme-aspect-ratios: ((21, 9),  (16, 9),  (4, 3),  (1, 1));
$theme-sides: (top, right, bottom, left);

// --------------------------------------------------
// mixins
// --------------------------------------------------

// color
@mixin u--color($colors: $theme-colors) {
  $selector: '.u--color';

  @each $name, $value in $colors {
    '#{$selector}-#{$name}' {
      color: $value;
    }
    'a#{$selector}-#{$name}:hover' {
      @if $name == black {
        color: lighten($value, 30%);
      } @else {
        color: shade($value, 15%);
      }
    }
  }
}

// background color
@mixin u--background-color($colors: $theme-colors) {
  @each $name, $value in $colors {
    .u--background-color-#{$name} {
      background-color: $value;
    }
  }
}

// border color
@mixin u--border-color($colors: $theme-colors) {
  @each $name, $value in $colors {
    .u--border-color-#{$name} {
      border-color: $value;
    }
  }
}

// border width
@mixin u--border-width($sizes: $theme-border-sizes, $sides: $theme-sides) {
  $selector: '.u--border-width';

  @each $size in $sizes {
    '#{$selector}-#{$size}' {
      border-width: #{$size}px;
    }
    @each $side in $sides {
      '#{$selector}-#{$side}-#{$size}' {
        border-#{$side}-width: #{$size}px;
      }
    }
  }
}

// margin
@mixin u--margin($sizes: $theme-margin-sizes, $sides: $theme-sides) {
  $selector: '.u--margin';

  @each $size in $sizes {
    '#{$selector}-#{$size}' {
      margin: #{$size}px;
    }
    @each $side in $sides {
      '#{$selector}-#{$side}-#{$size}' {
        margin-#{$side}: #{$size}px;
      }
    }
  }
  @each $size in $sizes {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$size}', true) {
      margin: #{$size}px;
    }
    @each $side in $sides {
      @include apply-breakpoint-postfixes('min', '#{$selector}-#{$side}-#{$size}', true) {
        margin-#{$side}: #{$size}px;
      }
    }
  }
}

// padding
@mixin u--padding($sizes: $theme-padding-sizes, $sides: $theme-sides) {
  $selector: '.u--padding';

  @each $size in $sizes {
    '#{$selector}-#{$size}' {
      padding: #{$size}px;
    }
    @each $side in $sides {
      '#{$selector}-#{$side}-#{$size}' {
        padding-#{$side}: #{$size}px;
      }
    }
  }

  @each $size in $sizes {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$size}', true) {
      padding: #{$size}px;
    }
    @each $side in $sides {
      @include apply-breakpoint-postfixes('min', '#{$selector}-#{$side}-#{$size}', true) {
        padding-#{$side}: #{$size}px;
      }
    }
  }
}

@mixin u--width($sizes: $theme-width-sizes) {
  $selector: '.u--width';

  @each $size in $sizes {
    '#{$selector}-#{$size}' {
      width: percentage($size) / 100;
    }
  }
  @each $size in $sizes {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$size}', true) {
      width: percentage($size) / 100;
    }
  }
}

// font weight
@mixin u--font-weight($options: $theme-font-weights) {
  @each $key, $value in $options {
    .u--font-weight-#{$key} {
      font-weight: $value;
    }
  }
}

// font style
@mixin u--font-style($options: $theme-font-style) {
  @each $option in $options {
    .u--font-style-#{$option} {
      font-style: $option;
    }
  }
}

// text alignment
@mixin u--text-align($options: $theme-text-align) {
  $selector: '.u--text-align';

  @each $option in $options {
    '#{$selector}-#{$option}' {
      text-align: $option;
    }
  }
  @each $option in $options {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$option}', true) {
      text-align: $option;
    }
  }
}

// text transform
@mixin u--text-transform($options: $theme-text-transform) {
  @each $option in $options {
    .u--text-transform-#{$option} {
      text-transform: $option;
    }
  }
}

// vertical alignment
@mixin u--vertical-align($options: $theme-vertical-align) {
  $selector: '.u--vertical-align';

  @each $option in $options {
    '#{$selector}-#{$option}' {
      vertical-align: $option;
    }
  }
  @each $option in $options {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$option}', true) {
      vertical-align: $option;
    }
  }
}

// float
@mixin u--float($options: $theme-float) {
  $selector: '.u--float';

  @each $option in $options {
    '#{$selector}-#{$option}' {
      float: $option;
    }
  }
  @each $option in $options {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$option}', true) {
      float: $option;
    }
  }
}

// responsive embed
@mixin u--embed-responsive($aspect-ratios: $theme-aspect-ratios) {
  $selector: '.u--embed-responsive';

  #{$selector} {
    position: relative;
    display: block;
    padding-bottom: ((9 * 100) / 16) * 1%;

    iframe,
    video,
    embed,
    object {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border: none !important;
    }
  }

  @each $aspect-ratio in $aspect-ratios {
    '#{$selector}--#{nth($aspect-ratio, 1)}x#{nth($aspect-ratio, 2)}' {
      padding-bottom: ((nth($aspect-ratio, 2) * 100) / nth($aspect-ratio, 1)) *
        1%;
    }
  }
}

// display
@mixin u--display($options: $theme-display) {
  $selector: '.u--display';

  @each $option in $options {
    '#{$selector}-#{$option}' {
      display: $option;
    }
  }
  @each $option in $options {
    @include apply-breakpoint-postfixes('min', '#{$selector}-#{$option}', true) {
      display: $option;
    }
  }
}

// hidden
@mixin u--hidden() {
  $selector: '.u--hidden';

  @include apply-breakpoint-postfixes('min', '#{$selector}', true, true) {
    display: none;
  }
}

// --------------------------------------------------
// clear fix
// --------------------------------------------------

.u--clearfix {
  @extend %clearfix;
}

// --------------------------------------------------
// truncate
// --------------------------------------------------

.u--truncate {
  @extend %truncate;
}

// --------------------------------------------------
// text color
// --------------------------------------------------

@include u--color();

// --------------------------------------------------
// background color
// --------------------------------------------------

@include u--background-color();

// --------------------------------------------------
// borders
// --------------------------------------------------

// border
.u--border {
  border: solid $global-border-width $global-border-color;
}

// border color
@include u--border-color();

// border width
@include u--border-width();

// --------------------------------------------------
// margins
// --------------------------------------------------

@include u--margin();

// --------------------------------------------------
// padding
// --------------------------------------------------

@include u--padding();

// --------------------------------------------------
// width
// --------------------------------------------------

@include u--width();

// --------------------------------------------------
// font weight
// --------------------------------------------------

@include u--font-weight();

// --------------------------------------------------
// font style
// --------------------------------------------------

@include u--font-style();

// --------------------------------------------------
// text alignment
// --------------------------------------------------

@include u--text-align();

// --------------------------------------------------
// vertical alignment
// --------------------------------------------------

@include u--vertical-align();

// --------------------------------------------------
// text transform
// --------------------------------------------------

@include u--text-transform();

// --------------------------------------------------
// floats
// --------------------------------------------------

@include u--float();

// --------------------------------------------------
// responsive embeds
// --------------------------------------------------

@include u--embed-responsive();

// --------------------------------------------------
// display
// --------------------------------------------------

@include u--display();

// --------------------------------------------------
// hidden
// --------------------------------------------------

@include u--hidden();
